@using ValidationPrototype.Models
@using ValidationPrototype.Validators
<h3>Bill</h3>

<EditForm Model="Model" OnValidSubmit="Submit">
    <FluentValidator TValidator="BillModelValidator" />
    <div class="row">
        <div class="col-12">
            <InputText @bind-Value="Model.BillName" class="form-control form-control-sm" placeholder="Bill Name" autocomplete="off"></InputText>
            <ValidationMessage For="@(() => Model.BillName)"/>
        </div>
    </div>

    <hr/>

    <div class="row">
        <div class="col">
            <Contact Model="Model.BilleeContact"/>
        </div>
        <div class="col-1"></div>
        <div class="col">
            <Contact Model="Model.BillerContact"/>
        </div>
    </div>

    <div class="row">
        <div class="col-md">
            <div class="float-sm-end">
                <button class="btn btn-primary waves-effect waves-light pull-right mb-2" type="submit">Save</button>
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public BillModel Model { get; set; } = new();

    private Task Submit(EditContext arg)
    {
        Console.WriteLine("Submitted!");
        return Task.CompletedTask;
    }

}
